include ../mixins/containers.pug
include ../mixins/containers_aph.pug

- var imgAssets = '../assets/graphics_space/';
- var defaultBgr = 'backgrounds/geometry3.jpg';


// ===================================================== SLIDES =====================================================
+mchapter('Prostor', imgAssets+'chapter_space.svg')
+mcontainer()
	+frameShard.width-70px.height-33p.top-300.center.z-index-100
		+quote('Herní grafika je o tom namačkat obří kvantum lineární algebry do těch několika milisekund, které nám herní smyčka dává.')
+frameInbox('Herní prostor')
	div.spacing-3xs
		.scope.fragment
			p 2D
			ul
				li.fragment top-down nebo side view
				li.fragment sprity jsou vykresleny jako dvojice trojúhelníků
				li.fragment rovnoběžná projekce
			.top-80.right-450
				img.height-220(src=imgAssets+'cat_2D.svg')
			.top-80.right-100
				img.width-290(src=imgAssets+'cat_2D.png')
		.scope.fragment
			p Izometrické 2D
			ul
				li.fragment odhalí hráči více informací než top-down
				li.fragment vícero typů projekce: 104°-135°
			.top-310.right-530
				img.height-120(src=imgAssets+'cat_iso.svg')
			.top-250.right-100
				img.width-290(src=imgAssets+'cat_iso.jpg')
		.scope.fragment
			p Falešné 3D
			ul
				li.fragment raycasting
				li.fragment Mode 7 z konzole SNES
			.top-420.right-100
				img.width-290(src=imgAssets+'cat_raycasting.png')
		.scope.fragment
			p 2.5D
			ul
				li.fragment 3D hra s omezenými stupni volnosti (např. sidescrollery)
			.top-630.right-100
				img.width-290(src=imgAssets+'cat_25D.jpg')
		.scope.fragment
			p 3D
			ul
				li.fragment regulární 3D hra
+frameInbox('Prostor')
	.important-orange.spacing-2xs
		.scope.fragment
			p Model Space
			ul
				li.fragment počátek se obvykle umístí do geometrického středu objektu
				li.fragment osy jsou zarovnány s přirozeným pozicováním modelu
		.scope.fragment
			p World Space
			ul
				li.fragment fixní prostor, ve kterém jsou vyjádřeny transformace všech objektů herního světa
		.scope.fragment
			p View/Camera Space
			ul
				li.fragment fixní vzhledem ke kameře
				li.fragment počátek je v ohnisku kamery
				li.fragment OpenGL: kamera se dívá ve směru záporné osy <span class="italic">z</span>
		.scope.fragment
			p Clip Space
			ul
				li.fragment hranol se souřadnicemi od -1 do 1 (OpenGL)
		.scope.fragment
			p View/Screen Space
			ul
				li.fragment oblast obrazovky, ve které se bude vykreslovat finální obraz
+frameInbox('World-Model-View')
	.important-orange.center.fill
		img.height-600(src=imgAssets+'world-model-view.svg')
+frameInbox('Clip Space')
	.important-orange.center.fill
		img.height-600(src=imgAssets+'clip_space.svg')
+frameInbox('View Volume')
	.important-orange
		ul
			li.fragment <span class="highlight">View volume</span> - oblast prostoru, kterou vidí kamera
			li.fragment <span class="highlight">Frustum</span> - komolý jehlan, tvar prostoru viditelný kamerou v perspektivní projekci
			li.fragment <span class="highlight">Rectangular prism</span> - obdélníkový hranol, tvar prostoru viditelný kamerou v rovnoběžné projekci
			li.fragment <span class="highlight">Field of View (FOV)</span> - úhel mezi levou a pravou stěnou view volume
		.space-md
		.flex-cols-2.fragment
			figure
				img.height-400(src=imgAssets+'projection_perspective.svg')
				p Perspektivní projekce
			figure
				img.height-400(src=imgAssets+'projection_ortographic.svg')
				p Rovnoběžná projekce
+frameInbox('Lookat Vektor')
	.important-green
		ul
			li.fragment jednotkový vektor který má stejný směr jako kamera
			li.fragment pokud je skalární součin mezi <span class="code highlight">lookAt</span> vektorem a <span class="code highlight">normálovým</span> vektorem polygonu záporný, polygon je natočený ke kameře
		.bottom-100.right-500
			img.height-500(src=imgAssets+'doomdoor.png')
		.bottom-110.right-380
			img.height-500(src=imgAssets+'lookat.svg')
+frameInbox('Rotace ve 3D prostoru')
	.important-orange.center
		img.height-700(src=imgAssets+'rotation.svg')
+frameInbox('Reprezentace rotací')
	.important-orange.spacing-4xs
		.scope.fragment
			p Eulerovy úhly
			ul
				li.fragment Pitch, Yaw, Roll (výška, kurz, natočení)
				li.upside.fragment stačí 3 floaty, intuitivní
				li.downside.fragment záleží na tom, v jakém pořadí rotace aplikujeme
				li.downside.fragment problém tzv. "gimbal locku" - když rotace způsobí sloučení dvou os
		.scope.fragment
			p Kvaterniony
			.bottom-20.right-20
				img.height-500(src=imgAssets+'quaternions.svg')
			ul
				li.fragment osa + úhel + trochu lineární algebry
				li.fragment
					include ../../assets/graphics_space/equations_generated/quaternions_01.svg
				li.fragment alternativní forma: 
					include ../../assets/graphics_space/equations_generated/quaternions_02.svg
				li.fragment jednotková délka: 
					include ../../assets/graphics_space/equations_generated/quaternions_03.svg
				li.fragment jednotkový kvaternion se dá vizualizovat jako 3D vektor + skalár
				li.fragment
					include ../../assets/graphics_space/equations_generated/quaternions_04.svg
				li.upside.fragment rotace je možno jednoduše interpolovat
				li.downside.fragment umožňuje pouze jednu plnou rotaci mezi dvěma klíčovými snímky
		.top-80.right-40
			img.height-200(src=imgAssets+'mass_effect_glitch.gif')
		+tipKeen1('Používejte eulerovy úhly pro rychlou rotaci okolo jedné osy a kvaterniony pro komplexní rotace okolo více os.').bottom-0.left-0
