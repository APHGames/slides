include ../mixins/containers.pug
include ../mixins/containers_aph.pug

- var imgAssets = '../assets/engines_intro/';
- var defaultBgr = 'backgrounds/bgr_wolfenstein.jpg';

// ===================================================== SLIDES =====================================================
+mchapter('Game Engines - overview', imgAssets+'chapter_engines_intro.svg')
+frameInbox('Game Engines Today')
	div.nopadding.fill.center.absolute
		img.height-640(src=imgAssets+'engines_today.svg')
	div.nopadding.fill.center.absolute
		img.height-550.left-350.bottom-140(src=imgAssets+'engines.png')
	.important-green.fill.nopadding
+frameInbox('Trends - 2014')
	div.nopadding.fill.center.absolute
		img.height-630(src=imgAssets+'trends_2014.svg')
+frameInbox('Trends - 2022')
	div.nopadding.fill.center.absolute
		img.height-630(src=imgAssets+'trends_2022.svg')
+frameInbox('Unreal Engine')
	div.important-green
		div.z-index-1000
			.scope.fragment(data-fragment-index="0")
				p Unreal Engine 1
				ul
					li released in 1998 by Epic Games as FPS game engine
					li <span class="highlight-2">Unreal</span> - the first game powered by this engine 
			.flex-cols-2.space-md.width-70p
				div
					.scope.fragment(data-fragment-index="1")
						p Unreal Engine 4
						ul
							li film-quality postprocessing
							li VFX & Particle Systems
							li beta Raytracing
				div
					.scope.fragment(data-fragment-index="2")
						p Unreal Engine 5.3
						ul
							li Nanite virtualized geometry
							li Lumen illumination engine
							li.upside source code is available
		.bottom-0.left-0.grid.grid-cols-3.grid.rows-2.width-100p.gap-30
			div.text-center
			div
			div.text-center.fragment(data-fragment-index="0")
				img.width-480(src=imgAssets+'unreal.jpg')
			div.text-center.fragment(data-fragment-index="1")
				img.height-270(src=imgAssets+'unreal_engine.jpg')
			div.text-center.fragment(data-fragment-index="1")
				img.height-270(src=imgAssets+'unreal_engine_2.jpg')
			div.text-center.fragment(data-fragment-index="2")
				img.height-270(src=imgAssets+'unreal_engine_3.jpg')
+frameInbox('Unreal games')
	div
		div.flex-cols-3
			figure.fragment
				img.height-280(src=imgAssets+'unreal_batman.jpg')
				p Batman Arkham Knight
			figure.fragment
				img.height-280(src=imgAssets+'unreal_sw.jpg')
				p Star Wars Jedi: Fallen Order
			figure.fragment
				img.height-280(src=imgAssets+'unreal_hellblade.jpg')
				p Hellblade: Senua's Sacrifice
		div.flex-cols-3.mt-50
			figure.fragment
				img.height-280(src=imgAssets+'unreal_borderlands.jpg')
				p Borderlands
			figure.fragment
				img.height-280(src=imgAssets+'unreal_fortnite.jpg')
				p Fortnite
			figure.fragment
				img.height-280(src=imgAssets+'unreal_alpha.jpg')
				p Planet Alpha
+frameInbox('Unity')
	div.important-green
		ul
			li.fragment all-purpose (not only) game engine 
			li.fragment first release in 2005
			li.fragment supports all main platforms
			li.fragment the most common engine for indie developers
			li.downside.fragment source code is available only to enterprise users
		.scope.fragment
			p Unity 2023.3 - current version
			ul
				li.fragment UVS - visual language (formerly Bolt)
				li.fragment Universal Render Pipeline
				li.fragment Split Graphics Jobs
				li.fragment new multiplayer engine
				li.fragment ECS component engine
	div
		img.height-300.right-0.top-40(src=imgAssets+'unity_ori.jpg')
		p.right-560.top-40.highlight Ori
		img.height-300.right-130.top-290(src=imgAssets+'unity_besiege.jpg')
		p.right-680.top-290.highlight Besiege
		img.height-300.right-260.top-540(src=imgAssets+'unity_cuphead.jpg')
		p.right-810.top-540.highlight Cuphead
+frameInbox('Godot')
	div.important-green
		ul
			li.fragment(data-fragment-index="0") 2D and 3D engine
			li.fragment(data-fragment-index="1") GDScript scripting language
			li.fragment(data-fragment-index="2") uses OOP architecture
			li.upside.fragment(data-fragment-index="3") MIT license
			li.downside.fragment(data-fragment-index="4") no well-known games so far
	div
		img.height-300.left-770.top-50.fragment(src=imgAssets+'godot.png', data-fragment-index='0')
		img.height-350.left-50.bottom-50.fragment(src=imgAssets+'godot_interface.jpg', data-fragment-index='1')
		img.height-450.right-0.bottom-50.fragment(src=imgAssets+'godot_games.png', data-fragment-index='2')
+frameInbox('Which engine do I need?')
	div
		ul
			li.fragment 2D microgames with simple animations can be made solely without engines
			li.fragment more complex games can be made in graphics libraries
			li.fragment Unity is great for 2D and 3D indie games, but doesn't offer low-level customization
			li.fragment Unreal is difficult to master, yet it can be customized in any way
			li.fragment open-source game engines heavily depend on the community and their future is uncertain
			li.fragment.highlight migration between engines is practically impossible
		.flex-cols-4.space-xl.mt-40
			.height-250.text-center.fragment
				img(src=imgAssets+'engine_horse.png')
			.height-250.text-center.fragment
				img(src=imgAssets+'engine_car.png')
			.height-250.text-center.fragment
				img(src=imgAssets+'engine_jet.png')
			.height-250.text-center.fragment
				img(src=imgAssets+'engine_rocket.png')
+frameInbox('Game engine architecture')
	.important-green.center
		img.height-800(src=imgAssets+'architecture.svg')
+frameInbox('Game Engine Primary Modules')
	.important-orange.spacing-2xs
		ul
			li.fragment <span class="highlight">Game Loop</span> - the heartbeat of all games
			li.fragment <span class="highlight">Scene Manager</span> - manages objects and structures them in a scene graph
			li.fragment <span class="highlight">Input Manager</span> - handles inputs (keyboard, mouse, touch, joystick, gamepad,...)
			li.fragment <span class="highlight">Resource Manager</span> - manages assets, controls a cache
			li.fragment <span class="highlight">Memory Manager</span> - memory allocator and deallocator
			li.fragment <span class="highlight">Rigidbody Engine</span> - event-based collision detection
			li.fragment <span class="highlight">Physics Engine</span> - handles behavior of objects based on forces and impulses
			li.fragment <span class="highlight">Rendering Engine</span> - renders the game, takes care of the rendering pipeline 
			li.fragment <span class="highlight">Animation Engine</span> - handles animations
			li.fragment <span class="highlight">Scripting Engine</span> - a bridge between the engine and interpreted languages (JS, C#,...)
			li.fragment <span class="highlight">Audio Engine</span> - plays music, clips, sounds, calculates 3D sound
			li.fragment <span class="highlight">AI Engine</span> - abstract engine for AI (state machines, behavioral trees,...)
			li.fragment <span class="highlight">Networking Engine</span> - handles multipeer communication
		div.fragment.mt-10
			ul
				li Other modules - GUI framework, Level Editor, Camera, Event System, LOD system,...
