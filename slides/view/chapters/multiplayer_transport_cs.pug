include ../mixins/containers.pug
include ../mixins/containers_aph.pug

- var imgAssets = '../assets/multiplayer_transport/';
- var defaultBgr = 'backgrounds/bgr_packets.jpg';

+mchapter('Transport', imgAssets+'chapter_transport.svg')
+frameInbox('TCP vs UDP')
	.important-green
		ul
			li.fragment na rozdíl od aplikací mají hry <span class="highlight-2">dva hlavní typy zpráv</span>
			li.fragment akce ovlivňující gameplay musí být potvrzeny
			li.fragment dynamická/streamovací data nepotřebují potvrzení
			li.fragment zprávy mohou mít různou prioritu
			li.mt-80.fragment obvykle se používá vlastní protokol jako nadstavba UDP
		.space-md
		+quote('Použití TCP je to nejhorší, co může člověk při implementaci multiplayer hry udělat.', 'Glenn Fielder, 2008').text-lg.fragment
+frameInbox('Architektura multiplayer enginu')
	.important-green
		.text-center.mt-20.fragment
			img.height-400(src=imgAssets+'multiplayer_architecture.svg')
		ul.mt-50
			li.fragment na serveru běží hra a klienti pouze zpracovávají vstupy a zobrazují stav hry
		.scope.fragment
			p Problémy
			ul
				li.fragment každý hráč má pouze částečně konzistentní informaci o herním stavu
				li.fragment v některých případech může server nesouhlasit se stavem klienta
				li.fragment mezi provedením akce a zobrazením jejího dopadu je zpoždění
+frameInbox('Příklad: Message Header')
	.important-green
		ul
			li.fragment(data-fragment-index='2') <span class="highlight">SEQ number</span> - sekvenční číslo zprávy
			li.fragment(data-fragment-index='3') <span class="highlight">ACK number</span> - číslo jiné zprávy, které je potřeba potvrdit
			li.fragment(data-fragment-index='4') <span class="highlight">ACK bit array</span> - potvrzující flag pro předchozích 32 zpráv
			li.fragment(data-fragment-index='5') <span class="highlight">Type</span> - typ zprávy (update, disconnect, command,...)
			li.fragment(data-fragment-index='6') <span class="highlight">ActionID</span> - identifikátor akce
		.text-center.mt-40.fragment(data-fragment-index='1')
			img.height-350(src=imgAssets+'message_header.svg')
+frameInbox('Typy zpráv')
	.important-orange.spacing-4xs
		.scope.fragment
			p Stream
			ul
				li.fragment nepotřebuje potvrzení, obsahuje kolekci spojitých hodnot (např. pozice, rotace)
		.scope.fragment
			p Snapshot
			ul
				li.fragment kompletní herní stav, zasílá se buď na vyžádání či v pevných intervalech
		.scope.fragment
			p Event
			ul
				li.fragment zpráva, která ovlivňuje herní stav, musí být potvrzena
				li.fragment příklady: UNIT_CREATED, UNIT_DESTROYED, BUILDING_COMPLETED
		.scope.fragment
			p Akce
			ul
				li.fragment zpráva s vysokou prioritou (hráčův vstup)
		.scope.fragment
			p Generická zpráva
			ul
				li.fragment např. vzdálené volání procedur (přehraj zvuk, resetuj animaci)
		.scope.fragment
			p Connection
			ul
				li.fragment zprávy pro discovery, handshake, registraci, disconnect, atd.
		.scope.fragment
			p Beacon
			ul
				li.fragment pravidelné zprávy informující server, že je spojení stále živé
+frameInbox('Příklad: Goat Attacks')
	div
		ul
			li <a href="http://goatattack.net">http://goatattack.net</a>
			li zprávy: <span class="highlight code">GPCReady, GPCSpawnNPC, GPCJoinRequest, GPCChatMessage, GPSBomb...</span>
		.text-center.mt-20
			img.height-420(src=imgAssets+'goatattack.jpg')
		.bottom-30.right-450.fragment
			img.height-190(src=imgAssets+'goat_attacks_header.svg')
+frameInbox('Serializace')
	div
		ul
			li.fragment komplexní herní svět může mít stovky pohybujících se objektů
			li.fragment potřebujeme odstranit vše, co není potřeba posílat po síti
			li.fragment zprávy by měly být co nejblíže <span class="highlight-2">MTU (~1500B)</span>
		.scope.fragment
			p Příklad bez optimalizace
			ul
				li.fragment RTS bitva
				li.fragment 5 hráčů
				li.fragment 500 pohybujících se jednotek
				li.fragment každý jednotka má 20 atributů velikosti 32-bitů -> 80 B na jednotku
				li.fragment server pošle 30 zpráv za sekundu
				li.fragment velikost headeru je 42B (IP + UDP + networking header)
				li.fragment potřebný bandwidth pro server: 
					include ../../assets/multiplayer_transport/equations_generated/serialization.svg
					|&nbsp;Mbps
+frameInbox('Serializace - binární footprint')
	div
		ul
			li serializujeme všechno (ne úplně robustní řešení)
		.code.text-xs.mt-20
			include ../../assets/multiplayer_transport/snippets_generated/serialization.html
		.text-center.mt-20
			figure
				img.height-160(src=imgAssets+'serialization_binary.svg')
				p Health = 10, Mana = 14; Little Endian
		.bottom-0.right-20
			img.height-180(src=imgAssets+'mage.png')
+frameInbox('Serializace - streamování')
	div
		ul
			li streamy nám umožní zvolit si, jaké atributy serializovat a jak
			li dobré řešení pro kolekce
		.code.text-3xs.mt-20
			include ../../assets/multiplayer_transport/snippets_generated/serialization_stream.html
		.bottom-0.right-20
			img.height-180(src=imgAssets+'mage.png')
+frameInbox('Komprese')
	.important-green
		.scope.fragment
			p Komprese bitů
			ul
				li.fragment použijeme co nejméně bitů na každou proměnnou
				li.fragment můžeme pracovat s omezeným rozsahem a přesností
			.top-300.left-300
				img.height-200(src=imgAssets+'compression_bits.svg')
		.space-xl
		.scope.fragment.mt-40
			p Enkódování entropie
			ul
				li.fragment komprimujeme data na základě četnosti výskytu
				li.fragment příklad: pokud je rotace skoro vždy 0, budeme ji posílat jen pokud bude mít jinou hodnotu
			.text-center.mt-20
				img.height-200(src=imgAssets+'compression_entropy.svg')
+frameInbox('Komprese')
	.important-green
		.scope.fragment
			p Komprese atributů
			ul
				li.fragment serializujeme pouze změněné atributy
				li.fragment každý objekt má bitové pole, které indikuje, které atributy jsou obsaženy ve zprávě
			.text-center
				img.height-480(src=imgAssets+'compression_attributes.svg')
		.scope.mt-40.fragment
			p Komprese celé zprávy
			ul
				li.fragment Huffmanovo kódování, LZ4,...
+frameInbox('Komprese')
	.important-green
		.scope.fragment
			p Delta zprávy
			ul
				li.fragment pokud se číslo příliš nezmění, nezmění se příliš ani jeho bity
				li.fragment mezi dvěma framy se změní pouze několik mál obitů (pozice, rotace)
				li.fragment uložíme pouze rozdíly pomocí XOR operace
				li.fragment velmi efektivní, ale citlivé na ztrátovost paketů
				li.fragment můžeme uložit 2/3 atributů jako rozdíl a 1/3 jako plná data - budeme potřebovat pouze 3 po sobě jdoucí pakety pro reprodukci kompletního stavu   
			.text-center.mt-60
				img.height-250(src=imgAssets+'compression_diff.svg')
+frameInbox('Replikace')
	.important-orange
		ul
			li.fragment přenos stavu objektu z jednoho zařízení na druhý
			li.fragment každý objekt musí mít svůj identifikátor (network ID)
			li.fragment zpráva obsahuje typ objektu a všechny parametry nutné k jeho konstrukci
		.code.text-sm.mt-40.fragment
			include ../../assets/multiplayer_transport/snippets_generated/replication.html
+frameInbox('Spolehlivost')
	.important-orange
		ul
			li.fragment pakety se mohou ztratit
			li.fragment server bude posílat zprávy opakovaně, dokud klient nepošle potvrzení
		.text-center.mt-100.fragment
			img.height-400(src=imgAssets+'reliability.svg')
+frameInbox('Řazení')
	.important-orange
		ul
			li.fragment pakety mohou přijít zpřeházené
			li.highlight-2.fragment klient by neměl aplikovat zprávu na herní model, dokud neaplikuje všechny předchozí zprávy
		.text-center.mt-100.fragment
			img.height-450(src=imgAssets+'order.svg')
+frameInbox('Latence')
	.important-green.spacing-3xs
		.scope.fragment
			p Latence
			ul
				li.fragment čas, který uplyne mezi provedením akce a pozorováním jejího následku
				li.fragment např. klik myší mající za cíl přesun jednotky po mapě
		.scope.mt-10.fragment
			p Akceptovatelná latence
			ul
				li.fragment FPS: 16-60 ms
				li.fragment RTS: < 250 ms
		.scope.mt-10.fragment
			p Latence mimo síťový přenos
			ul
				li.fragment samplování vstupu (~2 ms)
				li.fragment vykreslování (< 16 ms)
				li.fragment dekódování zprávy (~2-16 ms)
		.scope.mt-10.fragment
			p Síťová latence
			ul
				li.fragment procesní zpoždění (routování)
				li.fragment zpoždění na frontách (router může zpracovat pouze omezený počet paketů najednou)
				li.fragment zpoždění přenosem (informace nemůže cestovat rychleji než světlo)
		.bottom-200.right-50
			img.height-320(src=imgAssets+'latency_clock.svg')
+frameInbox('Latence - příklad')
	.important-green
		ul
			li oba klienti mají stejnou latenci
		.space-xl
		.text-center
			img.height-500(src=imgAssets+'latency_same.svg')
+frameInbox('Latence - příklad')
	.important-green
		ul
			li klient B má vyšší latenci
		.space-xl
		.text-center
			img.height-550(src=imgAssets+'latency_higher.svg')